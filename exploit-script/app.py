#!/usr/bin/env python3

import argparse
import requests
from sys import argv

from exploit import exploit
from report.save import saveReport
from utils.asciiart import asciiart

asciiart()

parser = argparse.ArgumentParser()
parser.add_argument("--url", help="Target website url")
parser.add_argument("--cookies", help="Cookies value", default="")
parser.add_argument("--output",  help="Report output file", default="report.md")

parser.add_argument("--all", action="store_true")
parser.add_argument("--xss", action="store_true")
parser.add_argument("--lfi", action="store_true")
parser.add_argument("--waf", action="store_true")
parser.add_argument("--sqli", action="store_true")
parser.add_argument("--cors", action="store_true")
parser.add_argument("--cves", action="store_true")
parser.add_argument("--nmap", action="store_true")
parser.add_argument("--webtech", action="store_true")
parser.add_argument("--backups", action="store_true")
parser.add_argument("--priv-esc", action="store_true")
parser.add_argument("--hardening", action="store_true")
parser.add_argument("--cmd-injection", action="store_true")
parser.add_argument("--tmp-injection", action="store_true")

args = parser.parse_args()
if args.url == None:
  print(f"Usage: python {argv[0]} --url=[target-url]")
  exit()

try:
  requests.get(args.url)
except:
  print(f"Unable to connect to the target url!\n")
  saveReport(f"Unable to connect to the target url!", args.output)
  exit()

exploit(args)
